# 機能設計書テンプレート

feature:
  title: "機能名/タスク名"
  version: "0.1.0"
  priority: "high/medium/low"
  estimated_time: "予想される開発時間"
  
overview:
  description: "機能の詳細な説明"
  purpose: "この機能が解決する課題や目的"
  user_story: "ユーザーストーリー（どのようにユーザーがこの機能を使用するか）"

flow_diagrams:
  # 処理フロー図
  process_flow: |
    ```mermaid
    graph TD
        A[開始] --> B{条件チェック}
        B -->|条件1| C[処理1]
        B -->|条件2| D[処理2]
        C --> E[終了]
        D --> E
    ```

  # 画面操作フロー
  screen_flow: |
    ```mermaid
    journey
        title 写真アップロードフロー
        section 写真選択
          ホーム画面表示: 5: User
          アップロードボタンクリック: 4: User
        section 写真処理
          AI判定処理: 3: System
          サムネイル生成: 2: System
        section 結果表示
          判定結果表示: 1: System
    ```

  # API連携フロー
  api_sequence: |
    ```mermaid
    sequenceDiagram
        participant Mobile
        participant API
        participant Supabase
        
        Mobile->>API: POST /api/upload
        API->>Supabase: Store Image
        Supabase-->>API: Storage URL
        API->>Supabase: Save Metadata
        Supabase-->>API: Save Result
        API-->>Mobile: 200 OK
    ```

project_references:
  repository: "https://github.com/user/repo"
  readme: "/README.md"
  system_design: "/docs/dev-structure.yaml"
  related_docs:
    - "/docs/related-doc1.md"
    - "/docs/related-doc2.md"

dependencies:
  frameworks:
    - name: "Next.js"
      version: "14"
    - name: "React"
      version: "^18"
    - name: "TypeScript"
      version: "^5"
    - name: "TailwindCSS"
      version: "^3"
  libraries:
    - name: "ライブラリ名"
      version: "バージョン"
      purpose: "使用目的"
  
file_structure:
  new_files:
    - path: "/src/app/[feature]/page.tsx"
      purpose: "メインページコンポーネント"
      dependencies:
        - "/src/components/ui"
        - "/src/lib/utils"
    - path: "/src/app/[feature]/layout.tsx"
      purpose: "レイアウト定義"
    - path: "/src/components/[feature]/index.tsx"
      purpose: "コンポーネント実装"
    - path: "/src/lib/types/[feature].ts"
      purpose: "型定義"
  
  modified_files:
    - path: "/src/app/layout.tsx"
      changes: "レイアウトの更新"
    - path: "/src/lib/types/index.ts"
      changes: "新しい型の违加"

database_changes:
  tables:
    - name: "テーブル名"
      new_columns:
        - name: "カラム名"
          type: "データ型"
          constraints: "制約"

  # SQLマイグレーション管理
  sql_migrations:
    - file_path: "supabase/migrations/YYYYMMDDHHMM_description.sql"
      commands: |
        -- SQLコマンドの例
        CREATE TABLE IF NOT EXISTS public.new_table (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        );

        COMMENT ON TABLE public.new_table IS 'New table description';

api_endpoints:
  - path: "/api/endpoint"
    method: "GET/POST/PUT/DELETE"
    request_body: "リクエストボディの構造"
    response: "レスポンスの構造"

testing_requirements:
  unit_tests:
    - "テストケース1の説明"
    - "テストケース2の説明"
  integration_tests:
    - "統合テストケース1の説明"

deployment_notes:
  steps:
    - "デプロイ手順1"
    - "デプロイ手順2"
  environment_variables:
    - "必要な環境変数1"
    - "必要な環境変数2"

security_considerations:
  - "セキュリティ上の考慮事項1"
  - "セキュリティ上の考慮事項2"

notes:
  - "その他の注意点や備考"
